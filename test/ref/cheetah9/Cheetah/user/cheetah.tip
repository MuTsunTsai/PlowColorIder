Localize=\title Localize Language~~\ident Localize_Language~~\keys Localize Language~~\browse gen~~\heading \{bmc images\\dynamics.bmp\} Localize Language~~~~{\b\cf1 Localize Language}~~Introduced in release 2.~~~~You can change the default english menu captions and component hints to your own preferred language.~~~~On initial startup {\cf1 Dynamics} checks for the presence of the {\cf1 Language.lng} file in the {\cf1 Dynamics} directory. If it exists it will be loaded and used for setting of the menu captions and for hints. If it does not exist it will be created.~~~~If you have more than one language file in the {\cf1 Dynamics} directory you can select that with {\cf1 Help Language}.~~~~Dynamics will remember the last language file that you used, so if you change to e.g. a German language file, the next time you run Dynamics it will come up with menu captions in the German language.~~~~~~{\b\cf1 How do I Create my own language file?}~~~~Make a copy of {\cf1 Language.lng} and give it a meaningfull name with the {\cf1 .lng} extension.~~~~Change the words after the {\cf1 =} signs in your e.g. {\cf1 Deutsch.lng} file to words in your own language. Do not change the part before the {\cf1 =} signs.~~~~If you want a keyboard accelerator just add the {\cf1 &} character in front of the desired accelerator character.~~~~Save your language file.~~~~~~~~\page~~
Updates={\b\cf1 Updates}~~Synth is written by Jan Verhoeven with Delphi 5.~~~~{\b\cf1 Email}~~{\uldb jan1.verhoeven@wxs.nl}{\v !ExecFile(mailto:jan1.verhoeven@wxs.nl)}~~~~~~{\b\cf1 WebSite}~~~~{\uldb http://jansfreeware.com}{\v !ExecFile(http://jansfreeware.com)}
Editor Keys=\title Keys~~\ident Keys~~\keys Keys~~\browse gen~~\heading Keys~~~~{\b\cf1 Keys}~~The Cheetah editor has a whole range of keyboard commands for you to use. It is worthwhile to familiarize yourself with these keyboard shortcuts as they can speed up your work.~~~~\sb-125~~\trqc\cellx1440\cellx2880~~\intbl~~{\cf1 Command} \cell~~{\cf1 Keystroke} \cell \row~~\intbl~~Up \cell~~Up \cell \row~~\intbl~~SelUp \cell~~Shift+Up \cell \row~~\intbl~~ScrollUp \cell~~Ctrl+Up \cell \row~~\intbl~~Down \cell~~Down \cell \row~~\intbl~~SelDown \cell~~Shift+Down \cell \row~~\intbl~~ScrollDown \cell~~Ctrl+Down \cell \row~~\intbl~~Left \cell~~Left \cell \row~~\intbl~~SelLeft \cell~~Shift+Left \cell \row~~\intbl~~WordLeft \cell~~Ctrl+Left \cell \row~~\intbl~~SelWordLeft \cell~~Shift+Ctrl+Left \cell \row~~\intbl~~Right \cell~~Right \cell \row~~\intbl~~SelRight \cell~~Shift+Right \cell \row~~\intbl~~WordRight \cell~~Ctrl+Right \cell \row~~\intbl~~SelWordRight \cell~~Shift+Ctrl+Right \cell \row~~\intbl~~PageDown \cell~~PgDn \cell \row~~\intbl~~SelPageDown \cell~~Shift+PgDn \cell \row~~\intbl~~PageBottom \cell~~Ctrl+PgDn \cell \row~~\intbl~~SelPageBottom \cell~~Shift+Ctrl+PgDn \cell \row~~\intbl~~PageUp \cell~~PgUp \cell \row~~\intbl~~SelPageUp \cell~~Shift+PgUp \cell \row~~\intbl~~PageTop \cell~~Ctrl+PgUp \cell \row~~\intbl~~SelPageTop \cell~~Shift+Ctrl+PgUp \cell \row~~\intbl~~LineStart \cell~~Home \cell \row~~\intbl~~SelLineStart \cell~~Shift+Home \cell \row~~\intbl~~EditorTop \cell~~Ctrl+Home \cell \row~~\intbl~~SelEditorTop \cell~~Shift+Ctrl+Home \cell \row~~\intbl~~LineEnd \cell~~End \cell \row~~\intbl~~SelLineEnd \cell~~Shift+End \cell \row~~\intbl~~EditorBottom \cell~~Ctrl+End \cell \row~~\intbl~~SelEditorBottom \cell~~Shift+Ctrl+End \cell \row~~\intbl~~ToggleMode \cell~~Ins \cell \row~~\intbl~~Copy \cell~~Ctrl+Ins \cell \row~~\intbl~~Paste \cell~~Shift+Ins \cell \row~~\intbl~~Delete Char \cell~~Del \cell \row~~\intbl~~Cut \cell~~Shift+Del \cell \row~~\intbl~~DeleteLastChar \cell~~BkSp \cell \row~~\intbl~~DeleteLastWord \cell~~Ctrl+BkSp \cell \row~~\intbl~~Undo \cell~~Alt+BkSp \cell \row~~\intbl~~Redo \cell~~Shift+alt+BkSp \cell \row~~\intbl~~LineBreak \cell~~Enter \cell \row~~\intbl~~Copy \cell~~Ctrl+C \cell \row~~\intbl~~BlockIndent \cell~~Shift+Ctrl+I \cell \row~~\intbl~~LineBreak \cell~~Ctrl+M \cell \row~~\intbl~~InsertLine \cell~~Ctrl+N \cell \row~~\intbl~~DeleteWord \cell~~Ctrl+T \cell \row~~\intbl~~BlockUnIndent \cell~~Shift+Ctrl+U \cell \row~~\intbl~~Paste \cell~~Ctrl+V \cell \row~~\intbl~~Cut \cell~~Ctrl+X \cell \row~~\intbl~~DeleteLine \cell~~Ctrl+Y \cell \row~~\intbl~~DeleteEOL \cell~~Shift+Ctrl+Y \cell \row~~\intbl~~Undo \cell~~Ctrl+Z \cell \row~~\intbl~~Redo \cell~~Shift+Ctrl+Z \cell \row~~\intbl~~GotoMarkerN \cell~~Ctrl+n (n=0..9) \cell \row~~\intbl~~SetMarkerN \cell~~Shift+Ctrl+n (n=0..9) \cell \row \pard~~~~\page~~\title Errors~~\ident Errors~~\keys Errors~~\browse gen~~\heading \{bmc images\\cheetah.bmp\} Errors~~~~{\b\cf1 Errors}~~When you compile your topic files in Help Workshop you are bound to get some error messages. Specially when you are used to making HTML documents you will find that the Help Compiler is much less forgiving than the average HTML browser.~~~~{\b\cf1 Non-Scrolling region defined after Scrolling region}~~When you get this message you probably have a blank line between a {\cf1 \\page} tag and a {\cf1 \\title} tag.~~These two tags {\b\cf1 must} be on two consequetive lines like this:~~{\cf1 \\page}~~{\cf1 \\title}~~~~~~\page~~
Delphi Logo={\uldb \{bmc images\\powerdelphi.bmp\}{\v !ExecFile(http://www.borland.com/delphi/)}  }
Smart Replace=\title Smart Replace~~\ident Smart_Replace~~\keys Smart Replace~~\browse gen~~\heading Smart Replace~~~~{\b\cf1 Smart Replace}~~With smart replace you can replace patterns of text rather then exact text. This gives you great flexibility in modifying the text in the editor.~~~~The following examples are from my {\cf1 HTMLBatcher} program, but similar replacements can be done in any language or text that you are working on.~~~~~~Did you ever want to remove the last empty column of all tables?~~~~With the following {\cf1 Smart Replace} code you can do this.~~~~{\cf1 FindText}~~<TR>[*1:<TD></TD></TR>|</TABLE>]~~~~{\cf1 ReplaceText}~~<TR>[1:</TR>]~~~~Or add a new column to all tables?~~~~{\cf1 FindText}~~<TR>[*1:</TD></TR>|</TABLE>]~~~~{\cf1 ReplaceText}~~<TR>[1:</TD><TD></TD></TR>]~~~~~~Or change all {\cf1 <TD>...</TD>} pairs to {\cf1 <TDA>..</TDA>}?~~~~{\cf1 FindText}~~<TD>[*1:</TD>]~~~~{\cf1 ReplaceText}~~<TDA>[*1:</TDA>]~~~~~~{\b\cf1 Syntax}~~JanSoft SmartReplaces uses a unique concept.~~~~Both the {\cf1 Find} and the {\cf1 Replace} text can consist of {\cf1 plain}  characters and {\cf1 meta} characters.~~~~Plain characters are just entered as in any find and replace operation.~~~~Meta characters are enclosed by square brackets {\cf1 [1:</TD></TR>|</TABLE>]} and the following two variations are valid:~~~~Allowed in Findtext:~~{\cf1 [*group:Text|Terminal]}~~{\cf1 [*group:Text]}~~~~Allowed in ReplaceText:~~{\cf1 [group:Text]}~~~~{\cf1 *} can be any of {\cf1 ['*','a','s','n','t','c','w']}~~~~{\b\cf1 *} will match any character~~{\b\cf1 a or A} will match {\cf1 ['a'..'z','A'..'Z']}~~{\b\cf1 s or S} will match {\cf1 [' '] } , spaces~~{\b\cf1 n or N} will match {\cf1 ['0'..'9']} numerals~~{\b\cf1 t or T} will match {\cf1 ['a'..'z','A'..'Z','1'..'6','<','>','/']} HTML tags~~{\b\cf1 c or C} will match {\cf1 [cr,lf]} carriage return and linefeed~~{\b\cf1 w or W} will match {\cf1 [' ',tab,cr,lf]} spaces,tabs, carriage return and line feeds~~~~~~~~{\cf1 Group} can be any number from {\cf1 0..31}.~~~~{\cf1 Text} is the text to match.~~~~{\cf1 Terminal} is the Text at which the search stops.~~~~The metatext pattern is searched for up to the terminal text. If there is no terminal, e.g. {\cf1 [1:</TD>]} then the pattern is matched once only.~~~~{\b\cf1 How does it work?}~~~~Suppose you have the following FindText:~~{\cf1 <TR>[*1:</TD></TR>|</TABLE>]}~~~~The program starts with a search for {\cf1 <TR>} and continues with a pattern search for {\cf1 </TD></TR>} up to {\cf1 </TABLE>}.~~~~All the text between the various {\cf1 </TD></TR>} is stored in variable {\cf1 1:}~~~~When searching is finished the program replaces the found text with e.g.~~{\cf1 <TR>[1:</TD><TD></TD></TR>]}~~~~Now the variable {\cf1 1:} is used to build the replace text.~~~~~~{\b\cf1 Programmer's Background}~~The text between the pattern symbols is stored as:~~{\cf1 text1||text2|text3||}~~~~When building the replace string all {\cf1 ||} are replaced by e.g. {\cf1 </TD><TD></TD></TR>}.~~~~This simple routine allows for powerfull manupulation.~~~~Using a terminal symbol means that you can do things like adding cells to an HTML table without having to now the number of rows.~~~~\page~~
Edit List={\b\cf1 User commands}~~The user can use the keyboard to edit the listbox:~~~~{\S3 Space - opens the current item for editing}~~{\S3 Enter in the inplace editor - updates the item}~~{\S3 Esc in the inplace editor - cancels inplace editing}~~{\S3 Numeric keypad Add(+) - add a new item}~~{\S3 Ctrl+Ins - inserts a new item}~~{\S3 Ctrl+Del - deletes the current item}~~{\S3 Ctrl+Drag-drop - moves the dragged item}~~
User Menu=In QuickPage you can create your own menu items that will appear under the main menu {\cf1 User}. The {\cf1 user menu} is stored in a seperate file: {\cf1 QuickPageUM.txt}. You can create a user menu with various levels of sub-menu's.~~~~~~{\b\cf1 Create from Scratch}~~To create a user menu from scratch:~~{\S3 select {\cf1 Tools Edit Usermenu}}~~{\S3 Enter the usermenu in the popup form}~~{\S3 Click OK when ready}~~~~{\b\cf1 Entering menu lines}~~There are four type of menu lines:~~{\S5 1.\tab normal items}~~{\S5 2.\tab items with submenu}~~{\S5 3.\tab root line}~~{\S5 4.\tab up line}~~~~{\b\cf1 normal items}~~Lines with a normal item have the following syntax:~~~~{\cf1 Menucaption[shortcut]=value}~~~~where {\cf1 menucaption} is the caption on the menu and value is text of any length. If you have the {\cf1 &} in the menucaption then the character following the & will be underlined in the menu and act as hotkey.~~~~For {\cf1 shortcut} you can use a combination of characters and special keys like:~~~~{\cf1 Ctrl+Alt+H }~~{\cf1 Ctrl+Alt+P}~~{\cf1 Ctrl+Alt+2}~~~~The {\cf1 value} part of the line can contain special place holder symbols.~~~~{\cf1 |}~~this is the place holder for the text caret. After insertion the cursor will be positioned where the pipe symbol is~~~~{\cf1 /\\}~~this is the place holder for selected text. If you have text selected before selecting the user menu item, the selected text will be inserted at the postion of /\\.~~~~You can also include two consecutive {\cf1  ~} characters in the line as a placeholder for a carriage return.~~~~~~{\b\cf1 Items with submenu}~~Items with a submenu have the following syntax:~~~~{\cf1 >menucaption}~~~~~~{\b\cf1 root line}~~A root line resets the master menu to {\cf1 User}. The next menu items will be added to {\cf1 User}.~~~~The syntax for a root line:~~{\cf1 <<}~~~~{\b\cf1 Up line}~~Goes one level up in the menu.~~Syntax: {\cf1 <}~~~~{\b\cf1 Change Menu Items}~~Select {\cf1 Tools Edit Usermenu} from the main menu, edit the menu and click {\cf1 OK}.~~~~The User Menu is saved in the {\cf1 QuickPageUM.txt} file.
